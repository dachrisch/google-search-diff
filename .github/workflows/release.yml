name: Create Release Version

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write
  pages: write
  id-token: write

env:
  JAVA_VERSION: 19
  SERVICE_ACCOUNT_PATH: service_account.json

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    uses: ./.github/workflows/part_build_test.yml
  apk:
    uses: ./.github/workflows/part_apk_release.yml
    secrets: inherit
    needs: build-test
  release-to-github:
    runs-on: ubuntu-latest
    needs: apk
    steps:
      - name: ðŸ«² Download APK
        uses: actions/download-artifact@v4
        with:
          name: apk-release
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: app-release.apk
          generate_release_notes: true
          fail_on_unmatched_files: true

  appbundle:
    uses: ./.github/workflows/part_appbundle_release.yml
    secrets: inherit
    needs: build-test
  release-to-appstore-internal:
    runs-on: ubuntu-latest
    environment: appbundle-release
    needs: appbundle
    steps:
      - name: ðŸ«² Download working directory
        uses: actions/download-artifact@v4
        with:
          name: working-directory
      - name: ðŸ«² Download Appbundle
        uses: actions/download-artifact@v4
        with:
          name: appbundle-release
      - name: Service Account JSON
        id: service_account
        run: echo "json=$(echo $BASE64_SERVICE_ACCOUNT_JSON | base64 --decode)" >> "$GITHUB_OUTPUT"
        env:
          BASE64_SERVICE_ACCOUNT_JSON: ${{ secrets.BASE64_SERVICE_ACCOUNT_JSON}}
      - name: Service Account File
        env:
          SERVICE_ACCOUNT_JSON: ${{ steps.service_account.outputs.json }}
          SERVICE_ACCOUNT_PATH: ${{ env.SERVICE_ACCOUNT_PATH }}
        run: |
          echo $SERVICE_ACCOUNT_JSON > $SERVICE_ACCOUNT_PATH
      - name: Get package name
        id: package
        run: echo "name=$(grep applicationId android/app/build.gradle|cut -d'"' -f2)" >> "$GITHUB_OUTPUT"
        # https://medium.com/lodgify-technology-blog/deploy-your-flutter-app-to-google-play-with-github-actions-f13a11c4492e
      - name: Deploy to Play Store (Internal testing)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ env.SERVICE_ACCOUNT_PATH }}
          packageName: ${{ steps.package.outputs.name }}
          releaseFiles: outputs/bundle/release/app-release.aab
          track: internal
          mappingFile: outputs/mapping/release/mapping.txt
          debugSymbols: intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib/
      - name: Promote release
        uses: kevin-david/promote-play-release@v1.1.0
        with:
          service-account-json-raw: ${{ steps.service_account.outputs.json }}
          package-name: ${{ steps.package.outputs.name }}
          from-track: internal
          to-track: beta

  ios:
    uses: ./.github/workflows/part_ios_release.yml
    secrets: inherit
    needs: build-test
